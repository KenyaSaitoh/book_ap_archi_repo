<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="jp.mufg.it.mybatis.company.dao.EmployeeMapper">

  <!-- CRUD Operations -->
  <!-- 以下で実はparameterTypeは省略可能
       Mapperを使うケース、SqlSessionを使うケース、いずれも省略可能
       どういう場合に省略不可なのか？ -->
  <select id="selectEmployee"
    parameterType="int"
    resultType="jp.mufg.it.mybatis.company.dto.Employee">
    SELECT
    EMPLOYEE_ID     AS employeeId,
    EMPLOYEE_NAME   AS employeeName,
    DEPARTMENT_NAME AS departmentName,
    SALARY  AS salary
    FROM EMPLOYEE
    WHERE EMPLOYEE_ID = #{employeeId}
  </select>

  <select id="selectEmployeeWithResultMap"
    resultMap="EmployeeResultMap">
    SELECT * FROM EMPLOYEE
    WHERE EMPLOYEE_ID = #{employeeId}
  </select>

  <!--
  以下では、カラム名とプロパティは自動的にマッピング
  またparameterTypeは省略可能（resultTypeは省略不可）
  戻り値にTypeAlias使っている -->
  <select id="selectEmployeeWithAutoMapping"
    resultType="Employee">
    SELECT * FROM EMPLOYEE
    WHERE EMPLOYEE_ID = #{employeeId}
  </select>

  <select id="selectEmployeeWithSqlFragment"
    parameterType="int" resultType="jp.mufg.it.mybatis.company.dto.Employee">
    <include refid="sqlFragment1" />
    WHERE EMPLOYEE_ID = #{employeeId}
  </select>

  <sql id="sqlFragment1">
    SELECT
    EMPLOYEE_ID     AS employeeId,
    EMPLOYEE_NAME   AS employeeName,
    DEPARTMENT_NAME AS departmentName,
    SALARY  AS salary
    FROM EMPLOYEE
  </sql>

  <select id="selectEmployeesByDepartment"
    parameterType="java.lang.String"
    resultType="jp.mufg.it.mybatis.company.dto.Employee">
    <![CDATA[
    SELECT
    EMPLOYEE_ID     AS employeeId,
    EMPLOYEE_NAME   AS employeeName,
    DEPARTMENT_NAME AS departmentName,
    SALARY  AS salary
    FROM EMPLOYEE
    WHERE DEPARTMENT_NAME = #{departmentName}
    ]]>
  </select>

  <select id="selectEmployees"
    parameterType="jp.mufg.it.mybatis.company.dto.Employee"
    resultType="jp.mufg.it.mybatis.company.dto.Employee">
    <![CDATA[
    SELECT
    EMPLOYEE_ID     AS employeeId,
    EMPLOYEE_NAME   AS employeeName,
    DEPARTMENT_NAME AS departmentName,
    SALARY  AS salary
    FROM EMPLOYEE
    WHERE DEPARTMENT_NAME = #{departmentName}
    AND SALARY >= #{salary}
    ]]>
  </select>

  <select id="selectEmployeesWithMap"
    parameterType="map"
    resultType="jp.mufg.it.mybatis.company.dto.Employee">
    <![CDATA[
    SELECT * FROM EMPLOYEE
    WHERE #{lowersalary} <= SALARY
    AND SALARY <= #{uppersalary}
    ]]>
  </select>

  <select id="selectEmpCountByDept"
    parameterType="java.lang.String" resultType="long">
    <![CDATA[
    SELECT COUNT(*) FROM EMPLOYEE
    WHERE DEPARTMENT_NAME = #{departmentName}
    ]]>
  </select>

  <insert id="insertEmployee"
    parameterType="jp.mufg.it.mybatis.company.dto.Employee">
    INSERT INTO EMPLOYEE
    VALUES (#{employeeId}, #{employeeName}, #{departmentName}, #{salary})
  </insert>

  <delete id="deleteEmployee"
    parameterType="int">
    DELETE FROM EMPLOYEE
    WHERE EMPLOYEE_ID = #{employeeId}
  </delete>

  <delete id="deleteEmployees"
    parameterType="jp.mufg.it.mybatis.company.dto.Employee">
    <![CDATA[
    DELETE FROM EMPLOYEE
    WHERE DEPARTMENT_NAME = #{departmentName}
    AND SALARY >= #{salary}
    ]]>
  </delete>

  <update id="updateEmployeeSalary"
    parameterType="Employee"> <!-- パラメータにTypeAlias使ってみた -->
    UPDATE EMPLOYEE
    SET SALARY = #{salary}
    WHERE EMPLOYEE_ID = #{employeeId}
  </update>

  <update id="subtractEmployeeSalary"
    parameterType="jp.mufg.it.mybatis.company.dto.EmployeeSalaryParam">
    <![CDATA[
    UPDATE EMPLOYEE
    SET SALARY = SALARY - #{payCut}
    WHERE SALARY >= #{salary}
    ]]>
  </update>

  <update id="subtractEmployeeSalaryWithParam">
    <![CDATA[
    UPDATE EMPLOYEE
    SET SALARY = SALARY - #{payCut}
    WHERE SALARY >= #{salary}
    ]]>
  </update>

  <update id="subtractEmployeeSalaryWithMap" parameterType="map">
    UPDATE EMPLOYEE
    SET SALARY = SALARY - #{payCut}
    WHERE SALARY >= #{salary}
  </update>

  <!--
  <update id="subtractEmployeeSalaryWithMap" parameterType="map">
    UPDATE EMPLOYEE
    SET SALARY = SALARY - #{payCut,javaType=int,jdbcType=NUMERIC}
    WHERE SALARY >= #{salary,javaType=int,jdbcType=NUMERIC}
  </update>
   -->

  <!-- resultMap -->
  <resultMap id="EmployeeResultMap"
    type="jp.mufg.it.mybatis.company.dto.Employee">
    <result property="employeeId" column="EMPLOYEE_ID" />
    <result property="employeeName" column="EMPLOYEE_NAME" />
    <result property="departmentName" column="DEPARTMENT_NAME" />
    <result property="salary" column="SALARY" />
  </resultMap>

</mapper>