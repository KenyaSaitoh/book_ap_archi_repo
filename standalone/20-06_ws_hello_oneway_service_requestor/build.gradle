configurations {
    jaxws
}

dependencies {
    jaxws "com.sun.xml.ws:jaxws-tools:2.1.4"
}

// ソースフォルダの設定
sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir "src/main/proxy"
        }
        resources {
            srcDir "src/main/resources"
        }
    }
    test {
        java {
            srcDir "src/test/java"
        }
        resources {
            srcDir "src/test/resources"
        }
    }
}

// WSDLファイルにエンドポイントを埋め込む
def replaceWsdl(wsdlFile, warName, serviceName) {
    File tmpFile = new File(wsdlFile.getParent() + "/tmp.wsdl")
    tmpFile.withWriter { writer ->
        wsdlFile.newReader().eachLine { line ->
            line = line.replaceAll("REPLACE_WITH_ACTUAL_URL",
            "http://" + conf.glassfish.hostName + ":" +
            conf.glassfish.httpPort + "/" +
            warName.replaceAll(/\.war/, "") + "/" + serviceName)
            writer.println(line)
        }
    }
    wsdlFile.delete()
    tmpFile.renameTo(wsdlFile.path)
}

// WSIMPORT
def wsimport(wsdlFile, proxyDir) {
    exec {
        executable conf.wsimport
        args "-d", proxyDir
        args "-keep"
        args wsdlFile
    }
}

task generateProxy doLast {
    def proxyDir = new File("$projectDir/src/main/proxy")
    proxyDir.deleteDir(); proxyDir.mkdir()
    def wsdlDir = new File("$projectDir/wsdl")
    new File(wsdlDir.path).eachFileMatch(FileType.FILES, ~/[A-Za-z]+.wsdl/) {
        // プロキシコードを生成する
        wsimport(it, proxyDir)
    }
}

// タスクをグループ化する
[generateProxy]*.group = "jaxws"